<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings 
    xmlns="http://java.sun.com/xml/ns/persistence/orm" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm  http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
    version="2.0">
    <description>Native queries para Paquete Escolar</description>
    
   
    <named-native-query name="PagoProve.ConstanciaRentencionByAnhoAndNitEmp" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosProveDto">
        <query>
            <![CDATA[
            select 
                rownum                           as idRow,
                VW_RPT_RENTA.RAZON_SOCIAL        as razonSocial, 
                VW_RPT_RENTA.NUMERO_NIT          as numeroNit, 
                VW_RPT_RENTA.NUM_CHEQUE          as numCheque,
                VW_RPT_RENTA.FECHA_CHEQUE        as fechaCheque, 
                VW_RPT_RENTA.DOC_PAGO            as docPago, 
                VW_RPT_RENTA.MONTO_ACTUAL        as montoActual, 
                VW_RPT_RENTA.MONTO_RETENCION     as montoRetencion, 
                VW_RPT_RENTA.MONTO_RENTA         as montoRenta, 
                VW_RPT_RENTA.NOMBRE_DEPARTAMENTO as nombreDepartamento, 
                VW_RPT_RENTA.CODIGO_DEPARTAMENTO as codigoDepartamento, 
                VW_RPT_RENTA.ID_ANHO             as idAnho, 
                VW_RPT_RENTA.MES_REGISTRO        as mesRegistro,
                formato_requerimiento            as formatoRequerimiento,
                VW_RPT_RENTA.id_planilla         as idPlanilla
            from 
                VW_RPT_RENTA
                inner join DATOS_DEPA_PAGADURIA on VW_RPT_RENTA.CODIGO_DEPARTAMENTO = DATOS_DEPA_PAGADURIA.CODIGO_DEPARTAMENTO
                inner join anho on VW_RPT_RENTA.ID_ANHO = anho.ID_ANHO
            where 
                extract(year from vw_rpt_renta.FECHA_CHEQUE) = ?1 and 
                (VW_RPT_RENTA.NUMERO_NIT = ?2 or VW_RPT_RENTA.CODIGO_DEPARTAMENTO = ?3)
            ]]>
        </query>
    </named-native-query>
    <named-native-query name="PagoProve.ReporteRentaMensualByRequerimiento" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosProveDto">
        <query>
            <![CDATA[
            select 
                ROWNUM          as idRow, 
                razon_social    as razonSocial, 
                numero_nit      as numeroNit, 
                NUM_CHEQUE      as numCheque, 
                FECHA_CHEQUE    as fechaCheque, 
                DOC_PAGO        as docPago, 
                MONTO_ACTUAL    as montoActual, 
                MONTO_RETENCION as montoRetencion, 
                MONTO_RENTA     as montoRenta
            from 
                VW_RPT_RENTA 
            where 
                CODIGO_DEPARTAMENTO = ?1 and
                (extract(MONTH FROM FECHA_CHEQUE) = ?2) and
                (extract(YEAR FROM FECHA_CHEQUE) = ?3) and 
                (formato_requerimiento = ?4)
            ]]>
        </query>
    </named-native-query>
    
    <named-native-query name="PagoProve.FileF14v15" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.InformeF14Dto">
        <query>
            <![CDATA[
            select 
                rownum as idRow,
                colA, colB, colC, colD, colE,
                colF, colG, colH, colI, colJ,
                colK, colL, colLl, colM, colN, colO,
                colP,colQ, colR
            from (select 
                    '1'                         as colA,
                    '9300'                      as colB,
                    SUBSTR(FN_GET_NOMBRE_EMP_F14(der.numero_nit),0, 100) as colC,
                    ''                                  as colD,
                    replace(per.numero_dui,'-','')      as colE,
                    '11'                        as colF,
                    to_char(sum(DECODE(DDP.ID_TIPO_DOC_PAGO, 1, ROUND(((case ddp.CONTRATO_MODIF when 1 then DDP.MONTO_ACTUAL when 0 then DP.MONTO_ACTUAL end)/1.13),2), 2, (case ddp.CONTRATO_MODIF when 1 then DDP.MONTO_ACTUAL when 0 then DP.MONTO_ACTUAL end))), 'fm999999990d00')     as colG,
                    '0.00'                         as colH,
                    to_char(sum(ddp.monto_Renta), 'fm999999990d00')        as colI,
                    '0.00'                      as colJ,
                    '0.00'                      as colK,
                    '0.00'                      as colL,
                    '0.00'                      as colLl,
                    '0.00'                      as colM,
                    '0.00'                      as colN,
                    '0.00'                      as colO,
                    '0.00'                      as colP,
                    '0.00'                      as colQ,
                    to_char(dp.fecha_insercion,'mmyyyy') as colR
                from requerimiento_fondos req
                    inner join detalle_proceso_adq dpa      on req.id_det_proceso_adq = dpa.id_det_proceso_adq
                    inner join proceso_adquisicion pa       on pa.id_proceso_Adq = dpa.id_proceso_Adq
                    inner join detalle_Requerimiento der    on req.id_requerimiento = der.id_requerimiento
                    inner join empresa emp                  on der.numero_nit = emp.numero_nit
                    inner join persona per                  on emp.id_persona = per.id_persona
                    inner join detalle_doc_pago ddp         on der.id_det_requerimiento = ddp.id_det_requerimiento
                    inner join detalle_planilla dp          on dp.id_detalle_doc_pago = ddp.id_detalle_doc_pago
                    inner join planilla_pago pp             on pp.id_planilla = dp.id_planilla
                where
                    der.activo = 0 and
                    ddp.estado_eliminacion = 0 and
                    dp.estado_eliminacion = 0 and
                    pp.estado_eliminacion = 0 and
                    dpa.id_rubro_Adq in (4,5) and
                    der.codigo_departamento = ?1 and
                    to_char(dp.fecha_insercion,'mmyyyy') = ?2
                group by 
                    der.razon_social,
                    der.numero_nit,
                    per.numero_dui,
                    id_anho,
                    dp.fecha_insercion
                order by dp.fecha_insercion)
            ]]>
        </query>
    </named-native-query>
    
    <named-native-query name="PagoProve.FileF910" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosProveDto">
        <query>
            <![CDATA[
            select 
                ROWNUM                      as idRow, 
                replace(NOMBRE, '  ',' ')   as razonSocial,
                NUMERO_NIT                  as numeroNit,
                MONTO_RETENCION             as montoRetencion,
                MONTO_RENTA                 as montoRenta
            from
                (select 
                    NOMBRE, NUMERO_NIT,
                    sum(MONTO_RETENCION) MONTO_RETENCION, 
                    sum(MONTO_RENTA) MONTO_RENTA
                from 
                    VW_RPT_RENTA 
                    inner join anho on anho.id_anho = VW_RPT_RENTA.id_anho
                where 
                    CODIGO_DEPARTAMENTO = ?1 and
                    extract(year from fecha_cheque) = ?2
                group by
                    NOMBRE,
                    numero_nit) tbl
            ]]>
        </query>
    </named-native-query>
    
    <named-native-query name="PagoProve.ReporteRentaMensual" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosProveDto">
        <query>
            <![CDATA[
            select 
                ROWNUM          as idRow, 
                razon_social    as razonSocial, 
                numero_nit      as numeroNit, 
                NUM_CHEQUE      as numCheque, 
                FECHA_CHEQUE    as fechaCheque, 
                DOC_PAGO        as docPago, 
                MONTO_ACTUAL    as montoActual, 
                MONTO_RETENCION as montoRetencion, 
                MONTO_RENTA     as montoRenta 
            from 
                VW_RPT_RENTA 
            where 
                CODIGO_DEPARTAMENTO = ?1 and
                (extract(MONTH FROM FECHA_CHEQUE) = ?2) and
                (extract(YEAR FROM FECHA_CHEQUE) = ?3)
            ]]>
        </query>
    </named-native-query>
    
    <named-native-query name="PagoProve.ProveedoresByIdRequerimiento" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosProveDto">
        <query>
            <![CDATA[
            SELECT
                ROWNUM          as idRow,
                razon_social    as razonSocial,
                numero_nit      as numeroNit
            FROM (SELECT distinct razon_social, numero_nit    
                FROM detalle_requerimiento 
                WHERE id_requerimiento = ?1 and  activo = 0 and
                    id_contrato NOT IN (SELECT dr.id_contrato
                                    FROM detalle_planilla dp 
                                        inner join detalle_doc_pago ddp on dp.ID_DETALLE_DOC_PAGO = ddp.ID_DETALLE_DOC_PAGO 
                                        inner join detalle_requerimiento dr on dr.ID_DET_REQUERIMIENTO = ddp.ID_DET_REQUERIMIENTO
                                    WHERE dr.ID_REQUERIMIENTO = ?1)
                                    ORDER BY RAZON_SOCIAL) tb
            ]]>
        </query>
    </named-native-query>
    
    <named-native-query name="PagoProve.IsPlanillaConReintegro" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosProveDto">
        <query>
            <![CDATA[
            SELECT 
                count(dp.CODIGO_ENTIDAD) as idRow
            FROM PLANILLA_PAGO PP
                INNER JOIN DETALLE_PLANILLA DP ON PP.ID_PLANILLA = DP.ID_PLANILLA
                INNER JOIN DETALLE_DOC_PAGO DDP ON DP.ID_DETALLE_DOC_PAGO = DDP.ID_DETALLE_DOC_PAGO
                INNER JOIN DETALLE_REQUERIMIENTO DR ON DDP.ID_DET_REQUERIMIENTO = DR.ID_DET_REQUERIMIENTO
            WHERE PP.ID_PLANILLA = ?1
                AND PP.ESTADO_ELIMINACION = 0
                AND DP.ESTADO_ELIMINACION = 0
                and (dp.monto_original - dp.monto_actual) <> 0
            ]]>
        </query>
    </named-native-query>
    <named-native-query name="PagoProve.NitProveedorByIdPlanilla" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosProveDto">
        <query>
            <![CDATA[
            select 
                ROWNUM              as idRow,
                numero_nit          as numeroNit,
                razon_social        as razonSocial,
                correo_electronico  as correoElectronico
            from(
                SELECT distinct dr.NUMERO_NIT, dr.RAZON_SOCIAL, emp.CORREO_ELECTRONICO
                FROM detalle_planilla dd
                    inner join DETALLE_DOC_PAGO ddp on ddp.ID_DETALLE_DOC_PAGO = dd.ID_DETALLE_DOC_PAGO
                    inner join DETALLE_REQUERIMIENTO dr on dr.ID_DET_REQUERIMIENTO = ddp.ID_DET_REQUERIMIENTO
                    inner join empresa emp on emp.NUMERO_NIT = dr.NUMERO_NIT
                WHERE dd.ID_PLANILLA = ?1
                    AND dd.ESTADO_ELIMINACION = 0
                ORDER BY dr.NUMERO_NIT)
            ]]>
        </query>
    </named-native-query>
    
    <named-native-query name="PagoProve.ResumenPagoByDepaAndDetProcesoAdq" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosResumenPagosDto">
        <query>
            <![CDATA[
            select 
                rownum                                          as idRow,
                formato_requerimiento                           as formatoRequerimiento,
                cantidad_planilla                               as cantidadPlanilla,
                cantidad_ce                                     as cantidadCe,
                monto_total                                     as montoTotal,
                monto_transferido                               as montoTransferido,
                monto_pagado                                    as montoPagado,
                monto_pendiente                                 as montoPendiente,
                monto_reintegro                                 as montoReintegro,
                monto_transferido - (monto_pagado+monto_reintegro)    as montoSaldo,
                codigo_departamento                             as codigoDepartamento
            from (select 
                    rf.formato_requerimiento,
                    count(distinct pp.id_planilla) cantidad_planilla,
                    count(distinct dp.id_detalle_planilla) cantidad_ce,
                    rf.monto_total,
                    nvl(fn_rf_monto_pagado(rf.id_requerimiento),0) monto_pagado,
                    nvl(fn_rf_monto_pendiente(rf.id_requerimiento), 0) monto_pendiente,
                    nvl(fn_rf_monto_reintegrar(rf.id_requerimiento),0) monto_reintegro,
                    rf.codigo_departamento,
                    rf.id_requerimiento
                from requerimiento_fondos rf
                    left outer join detalle_requerimiento dr    on rf.id_requerimiento = dr.id_requerimiento
                    left outer join planilla_pago pp            on pp.id_requerimiento = dr.id_requerimiento
                    left outer join detalle_planilla dp         on pp.id_planilla = dp.id_planilla
                where
                    rf.codigo_departamento = ?1 and
                    rf.id_det_proceso_adq = ?2 and
                    rf.estado_eliminacion = 0 and
                    (dp.estado_eliminacion = 0 or dp.estado_eliminacion is null)
                group by 
                    rf.id_requerimiento,
                    rf.formato_requerimiento,
                    rf.monto_total,
                    rf.codigo_departamento) tb
                inner join (select rf.id_requerimiento, sum(nvl(tr.monto_transferido,0)) monto_transferido
                            from requerimiento_fondos rf
                                left outer join transferencia_requerimiento tr on tr.id_requerimiento = rf.id_requerimiento
                            group by rf.id_requerimiento) tb2 on tb.id_requerimiento = tb2.id_requerimiento
                order by 
                    codigo_departamento, 
                    formato_requerimiento
            ]]>
        </query>
    </named-native-query>
    
    <named-native-query name="PagoProve.ResumenPagoByDetProcesoAdq" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosResumenPagosDto">
        <query>
            <![CDATA[
            select 
                rownum                                          as idRow,
                formato_requerimiento                           as formatoRequerimiento,
                cantidad_planilla                               as cantidadPlanilla,
                cantidad_ce                                     as cantidadCe,
                monto_total                                     as montoTotal,
                monto_transferido                               as montoTransferido,
                monto_pagado                                    as montoPagado,
                monto_pendiente                                 as montoPendiente,
                monto_reintegro                                 as montoReintegro,
                monto_transferido - (monto_pagado+monto_reintegro)    as montoSaldo,
                codigo_departamento                             as codigoDepartamento
            from (select 
                    rf.formato_requerimiento,
                    count(distinct pp.id_planilla) cantidad_planilla,
                    count(distinct dp.id_detalle_planilla) cantidad_ce,
                    rf.monto_total,
                    nvl(fn_rf_monto_pagado(rf.id_requerimiento),0) monto_pagado,
                    nvl(fn_rf_monto_pendiente(rf.id_requerimiento), 0) monto_pendiente,
                    nvl(fn_rf_monto_reintegrar(rf.id_requerimiento),0) monto_reintegro,
                    rf.codigo_departamento,
                    rf.id_requerimiento
                from requerimiento_fondos rf
                    left outer join detalle_requerimiento dr    on rf.id_requerimiento = dr.id_requerimiento
                    left outer join planilla_pago pp            on pp.id_requerimiento = dr.id_requerimiento
                    left outer join detalle_planilla dp         on pp.id_planilla = dp.id_planilla
                where
                    rf.id_det_proceso_adq = ?1 and
                    rf.estado_eliminacion = 0 and
                    (dp.estado_eliminacion = 0 or dp.estado_eliminacion is null)
                group by 
                    rf.id_requerimiento,
                    rf.formato_requerimiento,
                    rf.monto_total,
                    rf.codigo_departamento) tb
                inner join (select rf.id_requerimiento, sum(nvl(tr.monto_transferido,0)) monto_transferido
                            from requerimiento_fondos rf
                                left outer join transferencia_requerimiento tr on tr.id_requerimiento = rf.id_requerimiento
                            group by rf.id_requerimiento) tb2 on tb.id_requerimiento = tb2.id_requerimiento
                order by 
                    codigo_departamento, 
                    formato_requerimiento
            ]]>
        </query>
    </named-native-query>
    
    <named-native-query name="PagoProve.ResumenPagoByDetProcesoAdqAndRequerimiento"
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosResumenPagosPorReqYProveedorDto">
        <query>
            <![CDATA[
            select 
                rownum as idRow,
                formatoRequerimiento,codigoDepartamento, descripcionRubro,numeroNit,razonSocial,cantidadTotalContratos,montoTotalContratado,montoTotalPagado,
                montoTotalPendiente,montoTotalReintegrar
            from (
                select 

                    formato_requerimiento                           as formatoRequerimiento,
                    codigo_departamento                             as codigoDepartamento,
                    descripcion_rubro                               as descripcionRubro,
                    numero_nit                                      as numeroNit,
                    razon_social                                    as razonSocial,
                    count(id_contrato)                              as cantidadTotalContratos,
                    sum(monto_total)                                as montoTotalContratado,
                    sum(monto_pagado)                               as montoTotalPagado,
                    sum(monto_total-monto_pagado-monto_reintegrar)  as montoTotalPendiente,
                    sum(monto_reintegrar)                           as montoTotalReintegrar
                from
                    (select 
                        req.formato_requerimiento,
                        dr.codigo_departamento,
                        dr.descripcion_rubro,
                        dr.numero_nit,
                        dr.razon_social,
                        dr.id_contrato,
                        dr.monto_total,
                        nvl(dp.MONTO_ACTUAL,0) monto_pagado,
                        case nvl(ddp.contrato_modif,0) when 1 then nvl(dp.MONTO_ORIGINAL,0) - nvl(dp.monto_actual,0) else 0 end monto_reintegrar
                    from 
                        requerimiento_fondos req
                        inner join detalle_requerimiento dr   on req.id_requerimiento = dr.id_requerimiento
                        left outer join detalle_doc_pago ddp    on dr.id_det_requerimiento = ddp.id_det_requerimiento
                        left outer join detalle_planilla dp   on dp.id_detalle_doc_pago = ddp.id_detalle_doc_pago
                        left outer join planilla_pago pp        on pp.id_planilla = dp.id_planilla
                    where
                        req.id_det_proceso_adq = ?1 and
                        req.estado_eliminacion = 0 and
                        req.formato_requerimiento = ?2 and
                        dr.activo = 0 
                        ) tbl
                group by 
                    formato_requerimiento,
                    codigo_departamento,
                    descripcion_rubro,
                    numero_nit,
                    razon_social)
            ]]>
        </query>
    </named-native-query>
    
    
    <named-native-query name="PagoProve.RptLiquidacionDePagos" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosProveDto">
        <query>
            <![CDATA[
                select
                    rownum              as idRow,
                    CODIGO_DEPARTAMENTO as codigoDepartamento,
                    CODIGO_ENTIDAD      as codigoEntidad,
                    NOMBRE_CE           as nombreCe,
                    DESCRIPCION_RUBRO   as descripcionRubro,
                    NUMERO_NIT          as numeroNitEmp,
                    RAZON_SOCIAL        as razonSocial,
                    NO_DOC_PAGO         as docPago,
                    FECHA_DOC_PAGO      as fechaDocPago,
                    NUM_CHEQUE          as numCheque,
                    MONTO_ACTUAL        as montoActual
                from
                    vw_rpt_pago_liquidacion_depa
                where
                    codigo_departamento = ?1 and
                    (extract(YEAR FROM FECHA_CHEQUE) = ?2) and
                    ID_PROCESO_ADQ = ?3 and
                    CODIGO_ENTIDAD = ?4
            ]]>
        </query>
    </named-native-query>
    <named-native-query name="PagoProve.RptReintegroByIdReq" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.DatosProveDto">
        <query>
            <![CDATA[
                select
                    rownum          as idRow,
                    CODIGO_ENTIDAD  as codigoEntidad, 
                    NOMBRE_CE       as nombreCe, 
                    RAZON_SOCIAL    as razonSocial, 
                    REINTEGRO       as montoReintegro
                from
                    vw_rpt_pago_reintegro
                where
                    id_requerimiento = ?1
            ]]>
        </query>
    </named-native-query>
    
    <named-native-query name="PagoProve.QueryConsultaRequerimiento" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.ResumenRequerimientoDto">
        <query>
            <![CDATA[
            select 
                rownum                  as idRow,
                tb1.id_requerimiento    as idRequerimiento,
                componente,
                formato_requerimiento   as formatoRequerimiento,
                monto_total             as montoTotal,
                nvl(monto_transferido,0)       as montoTransferido,
                cantidad_planilla       as cantidadPlanilla,
                monto_total_planilla    as montoTotalPlanilla,
                monto_pendiente_pago    as montoPendientePago,
                monto_reintegrar        as montoReintegrar,
                (nvl(monto_transferido,0) - saldo_ejecutado) saldoRequerimiento,
                numero_requerimiento    as numeroRequerimiento
            from (select 
                        req.id_requerimiento,
                        req.componente,
                        req.formato_requerimiento,
                        req.monto_total,
                        count(distinct pp.id_planilla) cantidad_planilla,
                        nvl(fn_rf_monto_pagado(req.id_requerimiento),0) monto_total_planilla,
                        nvl(fn_rf_monto_pendiente(req.id_requerimiento), 0) monto_pendiente_pago,
                        nvl(fn_rf_monto_reintegrar(req.id_requerimiento),0) monto_reintegrar,
                        nvl(fn_rf_monto_pagado(req.id_requerimiento)-fn_rf_monto_reintegrar(req.id_requerimiento),0) saldo_ejecutado,
                        req.numero_requerimiento
                    from 
                        requerimiento_fondos req
                        left outer join detalle_requerimiento detq  on req.id_requerimiento = detq.id_requerimiento
                        left outer join planilla_pago pp            on pp.id_requerimiento = detq.id_requerimiento and pp.estado_eliminacion = 0
                        left outer join detalle_planilla detp       on pp.id_planilla = detp.id_planilla
                    where
                        req.codigo_departamento = ?1 and
                        req.id_det_proceso_adq = ?2 and 
                        req.estado_eliminacion = 0 
                    group by 
                        req.numero_requerimiento,
                        req.id_requerimiento,
                        req.componente,
                        req.formato_requerimiento,
                        req.monto_total) tb1
                left outer join (select req.id_requerimiento, sum(monto_transferido) monto_transferido
                            from requerimiento_fondos req
                                inner join transferencia_requerimiento tr on tr.id_requerimiento = req.id_requerimiento
                            group by req.id_requerimiento) tb2 on tb1.id_requerimiento = tb2.id_requerimiento
            ]]>
        </query>
    </named-native-query>
    <named-native-query name="PagoProve.RptPreCargaByIdDetProcesoAdq" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.pagoprove.PreCargaDto">
        <query>
            <![CDATA[
            select 
                rownum                  as idRow,
                codigo_entidad          as codigoEntidad,
                nombre                  as nombre,
                codigo_departamento     as codigoDepartamento,
                nombre_departamento     as nombreDepartamento,
                codigo_municipio        as codigoMunicipio,
                nombre_municipio        as nombreMunicipio,
                descripcion_rubro       as descripcionRubro,
                cantidad_total          as cantidadTotal,
                cantidad_total_libros   as cantidadTotalLibros,
                monto_total             as montoTotal,
                numero_nit              as numeroNit,
                razon_social            as razonSocial
            from vw_formato_pre_carga 
            where id_det_proceso_adq = ?1 and 
                id_contrato not in (select id_contrato 
                                    from detalle_requerimiento dr inner join requerimiento_fondos req on req.id_requerimiento = dr.id_requerimiento 
                                    where req.id_det_proceso_adq = ?1 and dr.activo = 0)
            ]]>
        </query>
    </named-native-query>
    <named-native-query name="Liquidacion.DatosContratoDto" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.liquidacion.DatosContratoDto">
        <query>
            <![CDATA[
            select 
                id_row             as idRow,
                id_oferta          as idOferta,
                no_item            as noItem,
                cantidad           as cantidad,
                precio_unitario    as precioUnitario,
                id_contrato        as idContrato,
                id_estado_reserva  as idEstadoReserva,
                codigo_entidad     as codigoEntidad,
                id_det_proceso_adq as idDetProcesoAdq
            from vw_sub_liq_contrato_orig 
            where codigo_entidad = ?1 and 
                id_det_proceso_adq = ?2 and 
                id_participante = ?3
            order by to_number(no_item)
            ]]>
        </query>
    </named-native-query>
    <named-native-query name="Liquidacion.DatosModificativaDto" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.liquidacion.DatosModificativaDto">
        <query>
            <![CDATA[
            select 
                id_row              as idRow,
                id_contrato         as idContrato,
                no_item             as noItem,
                cantidad_new        as cantidadNew,
                precio_unitario_new as precioUnitarioNew,
                id_estado_reserva   as idEstadoReserva
            from vw_sub_liq_contrato_modif
            where id_contrato = ?1 and 
                id_estado_reserva = 2
            order by to_number(no_item)
            ]]>
        </query>
    </named-native-query>
    <named-native-query name="Liquidacion.DatosRecepcionAndResguardoDto" 
                        result-class="sv.gob.mined.paquescolar.model.pojos.liquidacion.DatosRecepcionAndResguardoDto">
        <query>
            <![CDATA[
            select 
                rownum              as idRow,
                id_contrato         as idContrato,
                no_item             as noItem,
                cantidad_entregada  as cantidadEntregada,
                cantidad_resguardo  as cantidadResguardo
            from (select 
                vw.id_contrato,
                vw.no_item,
                cantidad_entregada,
                nvl(tb.cantidad,0) cantidad_resguardo
            from vw_sub_liq_contrato_recep vw
                left outer join (select res.id_contrato, no_item, cantidad 
                                from resguardo res
                                    inner join detalle_resguardo det on res.id_resguardo = det.id_resguardo
                                where det.estado_eliminacion = 0 and res.estado_eliminacion = 0) tb on vw.id_contrato = tb.id_contrato and vw.no_item = tb.no_item
            where vw.id_contrato = ?1 
            order by to_number(vw.no_item)) 
            ]]>
        </query>
    </named-native-query>
</entity-mappings>